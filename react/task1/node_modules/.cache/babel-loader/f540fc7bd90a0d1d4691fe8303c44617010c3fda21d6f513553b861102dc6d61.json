{"ast":null,"code":"var _jsxFileName = \"D:\\\\WEB_DESIGNING\\\\react\\\\task1\\\\src\\\\App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  // const adddiv=document.getElementById('div1');\n  // const i1=document.getElementById('inp1');\n\n  // const add1=()=> \n  //  {\n  //   // adddiv.innerHTML =`<li>${i1.value}</li>`;\n  //   adddiv.innerHTML +=`<li>${i1.value}</li>`;\n  // }\n  //   const handleKeyDown = (event) => {\n  //     if (event.key === 'Enter') {\n  //       adddiv.innerHTML +=`<li>${i1.value}</li>`;      \n  //     }\n  //   }\n\n  //   const edit=()=> {\n  //     adddiv.setAttribute(\"contenteditable\", \"true\");\n  //   }\n  //   const eventtype= (event) => {\n  //     if (true) {\n  //       adddiv.innerHTML +=  event.type;\n  //     }\n  //   }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"showdata\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["App","_jsxDEV","_Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/WEB_DESIGNING/react/task1/src/App.js"],"sourcesContent":["function App() {\n  // const adddiv=document.getElementById('div1');\n  // const i1=document.getElementById('inp1');\n  \n  // const add1=()=> \n  //  {\n  //   // adddiv.innerHTML =`<li>${i1.value}</li>`;\n  //   adddiv.innerHTML +=`<li>${i1.value}</li>`;\n  // }\n  //   const handleKeyDown = (event) => {\n  //     if (event.key === 'Enter') {\n  //       adddiv.innerHTML +=`<li>${i1.value}</li>`;      \n  //     }\n  //   }\n    \n  //   const edit=()=> {\n  //     adddiv.setAttribute(\"contenteditable\", \"true\");\n  //   }\n  //   const eventtype= (event) => {\n  //     if (true) {\n  //       adddiv.innerHTML +=  event.type;\n  //     }\n  //   }\n  return (\n    <>\n    {/* <input type=\"text\" name=\"\" id=\"inp1\" onKeyDown={handleKeyDown} />\n    <button id=\"btn1\" onClick={add1}>Add</button>\n    <div style={{\"border\":\"2px solid black\", \"height\":\"auto\", \"width\":\"300px\",\"marginTop\":\"30px\"}} id=\"div1\"></div>\n    <button onClick={edit}>Edit</button>\n    <button onClick={eventtype}>Event Type Check</button> */}\n    <div><showdata/></div>\n    \n    \n    </>\n  );\n}\n\nexport default App;\n\n\n\n"],"mappings":";;;AAAA,SAASA,GAAGA,CAAA,EAAG;EACb;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBACEC,OAAA,CAAAC,SAAA;IAAAC,QAAA,eAMAF,OAAA;MAAAE,QAAA,eAAKF,OAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC,gBAGpB,CAAC;AAEP;AAACC,EAAA,GAnCQR,GAAG;AAqCZ,eAAeA,GAAG;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}